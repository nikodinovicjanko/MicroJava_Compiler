INFO  01:25:59,262 - Compiling source file: C:\Users\Janko\OneDrive\Desktop\MJCompilerProject\workspace\MJCompiler\test\program.mj
INFO  01:25:59,289 - #2 program
INFO  01:25:59,290 - #40 test301
INFO  01:25:59,290 - #40 int
INFO  01:25:59,291 - #40 a
INFO  01:25:59,291 - #8 ;
INFO  01:25:59,291 - #40 int
INFO  01:25:59,292 - #40 b
INFO  01:25:59,292 - #8 ;
INFO  01:25:59,292 - #40 int
INFO  01:25:59,292 - #40 c
INFO  01:25:59,292 - #8 ;
INFO  01:25:59,292 - #40 bool
INFO  01:25:59,292 - #40 f
INFO  01:25:59,292 - #8 ;
INFO  01:25:59,292 - #40 bool
INFO  01:25:59,292 - #40 f2
INFO  01:25:59,292 - #8 ;
INFO  01:25:59,293 - #3 {
INFO  01:25:59,293 - #11 void
INFO  01:25:59,293 - #40 main
INFO  01:25:59,293 - #5 (
INFO  01:25:59,298 - #6 )
INFO  01:25:59,299 - #3 {
INFO  01:25:59,299 - #40 f
INFO  01:25:59,299 - #14 =
INFO  01:25:59,299 - #41 false
INFO  01:25:59,300 - #8 ;
INFO  01:25:59,300 - #40 f2
INFO  01:25:59,301 - #14 =
INFO  01:25:59,301 - #41 true
INFO  01:25:59,301 - #8 ;
INFO  01:25:59,301 - #40 b
INFO  01:25:59,301 - #14 =
INFO  01:25:59,301 - #39 4
INFO  01:25:59,301 - #8 ;
INFO  01:25:59,301 - #24 if
INFO  01:25:59,301 - #5 (
INFO  01:25:59,301 - #40 f
INFO  01:25:59,301 - #30 &&
INFO  01:25:59,302 - #40 f2
INFO  01:25:59,302 - #30 &&
INFO  01:25:59,302 - #40 a
INFO  01:25:59,302 - #33 !=
INFO  01:25:59,302 - #39 0
INFO  01:25:59,303 - #31 ||
INFO  01:25:59,303 - #40 c
INFO  01:25:59,303 - #32 ==
INFO  01:25:59,304 - #39 0
INFO  01:25:59,304 - #6 )
INFO  01:25:59,305 - #3 {
INFO  01:25:59,305 - #9 print
INFO  01:25:59,305 - #5 (
INFO  01:25:59,305 - #40 a
INFO  01:25:59,305 - #6 )
INFO  01:25:59,305 - #8 ;
INFO  01:25:59,305 - #4 }
INFO  01:25:59,305 - #25 else
INFO  01:25:59,305 - #3 {
INFO  01:25:59,305 - #9 print
INFO  01:25:59,306 - #5 (
INFO  01:25:59,306 - #40 a
INFO  01:25:59,306 - #15 +
INFO  01:25:59,306 - #39 10
INFO  01:25:59,307 - #6 )
INFO  01:25:59,307 - #8 ;
INFO  01:25:59,307 - #4 }
INFO  01:25:59,307 - #24 if
INFO  01:25:59,307 - #5 (
INFO  01:25:59,312 - #40 f
INFO  01:25:59,312 - #6 )
INFO  01:25:59,312 - #3 {
INFO  01:25:59,312 - #9 print
INFO  01:25:59,312 - #5 (
INFO  01:25:59,312 - #38 +
INFO  01:25:59,312 - #6 )
INFO  01:25:59,312 - #8 ;
INFO  01:25:59,312 - #4 }
INFO  01:25:59,312 - #25 else
INFO  01:25:59,312 - #3 {
INFO  01:25:59,312 - #9 print
INFO  01:25:59,312 - #5 (
INFO  01:25:59,312 - #38 -
INFO  01:25:59,312 - #6 )
INFO  01:25:59,312 - #8 ;
INFO  01:25:59,313 - #4 }
INFO  01:25:59,313 - #4 }
INFO  01:25:59,313 - #4 }
INFO  01:25:59,325 - Program(
  ProgName(
   test301
  ) [ProgName]
  ItemDeclarations(
    ItemDeclarations(
      ItemDeclarations(
        ItemDeclarations(
          ItemDeclarations(
            NoItemDecl(
            ) [NoItemDecl]
            VarSingle(
              VarDecl(
                Type(
                 int
                ) [Type]
               a
              ) [VarDecl]
            ) [VarSingle]
          ) [ItemDeclarations]
          VarSingle(
            VarDecl(
              Type(
               int
              ) [Type]
             b
            ) [VarDecl]
          ) [VarSingle]
        ) [ItemDeclarations]
        VarSingle(
          VarDecl(
            Type(
             int
            ) [Type]
           c
          ) [VarDecl]
        ) [VarSingle]
      ) [ItemDeclarations]
      VarSingle(
        VarDecl(
          Type(
           bool
          ) [Type]
         f
        ) [VarDecl]
      ) [VarSingle]
    ) [ItemDeclarations]
    VarSingle(
      VarDecl(
        Type(
         bool
        ) [Type]
       f2
      ) [VarDecl]
    ) [VarSingle]
  ) [ItemDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
       main
      ) [MethodTypeName]
      NoFormParam(
      ) [NoFormParam]
      NoItemDecl(
      ) [NoItemDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesStatement(
                  AssignDesign(
                    SingleDesignator(
                     f
                    ) [SingleDesignator]
                    ExprS(
                      Positive(
                      ) [Positive]
                      TermS(
                        BoolFactor(
                         false
                        ) [BoolFactor]
                      ) [TermS]
                    ) [ExprS]
                  ) [AssignDesign]
                ) [DesStatement]
              ) [Statements]
              DesStatement(
                AssignDesign(
                  SingleDesignator(
                   f2
                  ) [SingleDesignator]
                  ExprS(
                    Positive(
                    ) [Positive]
                    TermS(
                      BoolFactor(
                       true
                      ) [BoolFactor]
                    ) [TermS]
                  ) [ExprS]
                ) [AssignDesign]
              ) [DesStatement]
            ) [Statements]
            DesStatement(
              AssignDesign(
                SingleDesignator(
                 b
                ) [SingleDesignator]
                ExprS(
                  Positive(
                  ) [Positive]
                  TermS(
                    NumFactor(
                     4
                    ) [NumFactor]
                  ) [TermS]
                ) [ExprS]
              ) [AssignDesign]
            ) [DesStatement]
          ) [Statements]
          MatchedStatement(
            AllConditions(
              ComplexCond(
                OneCond(
                  AllCondTerm(
                    ComplexCondTerm(
                      ComplexCondTerm(
                        OneCondTerm(
                          OneCondFact(
                            ExprS(
                              Positive(
                              ) [Positive]
                              TermS(
                                DesignFactor(
                                  SingleDesignator(
                                   f
                                  ) [SingleDesignator]
                                ) [DesignFactor]
                              ) [TermS]
                            ) [ExprS]
                          ) [OneCondFact]
                        ) [OneCondTerm]
                        OneCondFact(
                          ExprS(
                            Positive(
                            ) [Positive]
                            TermS(
                              DesignFactor(
                                SingleDesignator(
                                 f2
                                ) [SingleDesignator]
                              ) [DesignFactor]
                            ) [TermS]
                          ) [ExprS]
                        ) [OneCondFact]
                      ) [ComplexCondTerm]
                      ComplexCondFact(
                        ExprS(
                          Positive(
                          ) [Positive]
                          TermS(
                            DesignFactor(
                              SingleDesignator(
                               a
                              ) [SingleDesignator]
                            ) [DesignFactor]
                          ) [TermS]
                        ) [ExprS]
                        NotSameRelOp(
                        ) [NotSameRelOp]
                        ExprS(
                          Positive(
                          ) [Positive]
                          TermS(
                            NumFactor(
                             0
                            ) [NumFactor]
                          ) [TermS]
                        ) [ExprS]
                      ) [ComplexCondFact]
                    ) [ComplexCondTerm]
                  ) [AllCondTerm]
                ) [OneCond]
                AllCondTerm(
                  OneCondTerm(
                    ComplexCondFact(
                      ExprS(
                        Positive(
                        ) [Positive]
                        TermS(
                          DesignFactor(
                            SingleDesignator(
                             c
                            ) [SingleDesignator]
                          ) [DesignFactor]
                        ) [TermS]
                      ) [ExprS]
                      SameRelOp(
                      ) [SameRelOp]
                      ExprS(
                        Positive(
                        ) [Positive]
                        TermS(
                          NumFactor(
                           0
                          ) [NumFactor]
                        ) [TermS]
                      ) [ExprS]
                    ) [ComplexCondFact]
                  ) [OneCondTerm]
                ) [AllCondTerm]
              ) [ComplexCond]
            ) [AllConditions]
            PrintStatementNoArg(
              ExprS(
                Positive(
                ) [Positive]
                TermS(
                  DesignFactor(
                    SingleDesignator(
                     a
                    ) [SingleDesignator]
                  ) [DesignFactor]
                ) [TermS]
              ) [ExprS]
            ) [PrintStatementNoArg]
            ElseStmt(
              ElseTerminal(
              ) [ElseTerminal]
              PrintStatementNoArg(
                ExprC(
                  ExprS(
                    Positive(
                    ) [Positive]
                    TermS(
                      DesignFactor(
                        SingleDesignator(
                         a
                        ) [SingleDesignator]
                      ) [DesignFactor]
                    ) [TermS]
                  ) [ExprS]
                  PlusOperator(
                  ) [PlusOperator]
                  TermS(
                    NumFactor(
                     10
                    ) [NumFactor]
                  ) [TermS]
                ) [ExprC]
              ) [PrintStatementNoArg]
            ) [ElseStmt]
          ) [MatchedStatement]
        ) [Statements]
        MatchedStatement(
          AllConditions(
            OneCond(
              AllCondTerm(
                OneCondTerm(
                  OneCondFact(
                    ExprS(
                      Positive(
                      ) [Positive]
                      TermS(
                        DesignFactor(
                          SingleDesignator(
                           f
                          ) [SingleDesignator]
                        ) [DesignFactor]
                      ) [TermS]
                    ) [ExprS]
                  ) [OneCondFact]
                ) [OneCondTerm]
              ) [AllCondTerm]
            ) [OneCond]
          ) [AllConditions]
          PrintStatementNoArg(
            ExprS(
              Positive(
              ) [Positive]
              TermS(
                CharFactor(
                 +
                ) [CharFactor]
              ) [TermS]
            ) [ExprS]
          ) [PrintStatementNoArg]
          ElseStmt(
            ElseTerminal(
            ) [ElseTerminal]
            PrintStatementNoArg(
              ExprS(
                Positive(
                ) [Positive]
                TermS(
                  CharFactor(
                   -
                  ) [CharFactor]
                ) [TermS]
              ) [ExprS]
            ) [PrintStatementNoArg]
          ) [ElseStmt]
        ) [MatchedStatement]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  01:25:59,325 - ===================================
INFO  01:25:59,327 - Deklarisana promenljiva a tipa 1 na liniji 7
INFO  01:25:59,327 - Deklarisana promenljiva b tipa 1 na liniji 8
INFO  01:25:59,327 - Deklarisana promenljiva c tipa 1 na liniji 9
INFO  01:25:59,327 - Deklarisana promenljiva f tipa 1 na liniji 10
INFO  01:25:59,327 - Deklarisana promenljiva f2 tipa 1 na liniji 11
INFO  01:25:59,328 - Obradjuje se funkcija main na liniji 15
INFO  01:25:59,328 -  Print count calls = 4
INFO  01:25:59,328 -  Deklarisanih promenljivih ima = 5
INFO  01:25:59,328 - ===================================
INFO  01:25:59,336 - Parsiranje uspesno zavrseno!
