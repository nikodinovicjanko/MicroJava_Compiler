// generated with ast extension for cup
// version 0.8
// 14/8/2021 18:41:0


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Unmatched Unmatched);
    public void visit(Mulop Mulop);
    public void visit(ItemDecl ItemDecl);
    public void visit(Matched Matched);
    public void visit(SingleConst SingleConst);
    public void visit(Relop Relop);
    public void visit(SingleVar SingleVar);
    public void visit(FormalParamDecl FormalParamDecl);
    public void visit(StatementList StatementList);
    public void visit(Addop Addop);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(VarList VarList);
    public void visit(Designator Designator);
    public void visit(Term Term);
    public void visit(Condition Condition);
    public void visit(ListConst ListConst);
    public void visit(ArrDecl ArrDecl);
    public void visit(ElseStatement ElseStatement);
    public void visit(ActualParamList ActualParamList);
    public void visit(FormalParamList FormalParamList);
    public void visit(Expr Expr);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(ActualPars ActualPars);
    public void visit(VarDecls VarDecls);
    public void visit(ItemDeclList ItemDeclList);
    public void visit(Statement Statement);
    public void visit(CondFact CondFact);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(MinusOption MinusOption);
    public void visit(FormPars FormPars);
    public void visit(OneCondFact OneCondFact);
    public void visit(ComplexCondFact ComplexCondFact);
    public void visit(OneCondTerm OneCondTerm);
    public void visit(ComplexCondTerm ComplexCondTerm);
    public void visit(AllCondTerm AllCondTerm);
    public void visit(OneCond OneCond);
    public void visit(ComplexCond ComplexCond);
    public void visit(AllConditions AllConditions);
    public void visit(Positive Positive);
    public void visit(Negative Negative);
    public void visit(LEQRelOp LEQRelOp);
    public void visit(LowerRelOp LowerRelOp);
    public void visit(GEQRelOp GEQRelOp);
    public void visit(GreaterRelOp GreaterRelOp);
    public void visit(NotSameRelOp NotSameRelOp);
    public void visit(SameRelOp SameRelOp);
    public void visit(MinusOperator MinusOperator);
    public void visit(PlusOperator PlusOperator);
    public void visit(DivOperator DivOperator);
    public void visit(ModOperator ModOperator);
    public void visit(MulOperator MulOperator);
    public void visit(ActualParam ActualParam);
    public void visit(ActualParams ActualParams);
    public void visit(NoActuals NoActuals);
    public void visit(Actuals Actuals);
    public void visit(FuncCall FuncCall);
    public void visit(ExprFactor ExprFactor);
    public void visit(NewFactor NewFactor);
    public void visit(BoolFactor BoolFactor);
    public void visit(CharFactor CharFactor);
    public void visit(NumFactor NumFactor);
    public void visit(DesignFactor DesignFactor);
    public void visit(TermS TermS);
    public void visit(TermC TermC);
    public void visit(ExprS ExprS);
    public void visit(ExprC ExprC);
    public void visit(DesignatorArr DesignatorArr);
    public void visit(ArrayDesignator ArrayDesignator);
    public void visit(SingleDesignator SingleDesignator);
    public void visit(DesignatorDEC DesignatorDEC);
    public void visit(DesignatorINC DesignatorINC);
    public void visit(AssignDesign AssignDesign);
    public void visit(ElseTerminal ElseTerminal);
    public void visit(NoElseStmt NoElseStmt);
    public void visit(ElseStmt ElseStmt);
    public void visit(ProcCall ProcCall);
    public void visit(MatchedStatement MatchedStatement);
    public void visit(ReturnNoExpr ReturnNoExpr);
    public void visit(ReturnExpr ReturnExpr);
    public void visit(PrintStatementWArgs PrintStatementWArgs);
    public void visit(PrintStatementNoArg PrintStatementNoArg);
    public void visit(ReadStatement ReadStatement);
    public void visit(ErrorStmt ErrorStmt);
    public void visit(DesStatement DesStatement);
    public void visit(Type Type);
    public void visit(NoStmt NoStmt);
    public void visit(Statements Statements);
    public void visit(SingleFormalParamDecl SingleFormalParamDecl);
    public void visit(FormalParamDecls FormalParamDecls);
    public void visit(NoFormParam NoFormParam);
    public void visit(FormParams FormParams);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(MethodDecl MethodDecl);
    public void visit(NoMethodDecl NoMethodDecl);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(SingleBoolConst SingleBoolConst);
    public void visit(SingleCharConst SingleCharConst);
    public void visit(SingleNumConst SingleNumConst);
    public void visit(OneConst OneConst);
    public void visit(MultipleConst MultipleConst);
    public void visit(ConstDecl ConstDecl);
    public void visit(ArrayDecl ArrayDecl);
    public void visit(VarDecl VarDecl);
    public void visit(SimpleVar SimpleVar);
    public void visit(ArrVar ArrVar);
    public void visit(VarListA VarListA);
    public void visit(VarListV VarListV);
    public void visit(VarDeclError VarDeclError);
    public void visit(SingleV SingleV);
    public void visit(Vars Vars);
    public void visit(Constant Constant);
    public void visit(NoItemDecl NoItemDecl);
    public void visit(ItemDeclarations ItemDeclarations);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
